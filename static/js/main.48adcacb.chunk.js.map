{"version":3,"sources":["assets/JobJarScreenshot.png","assets/KDaceyScreenshot.png","assets/MarsRoverScreenshot.png","assets/Chingu_Certificate.jpg","assets/FCC_Certificate.png","components/AboutScreen.js","components/ProjectsScreen.js","components/ContactScreen.js","components/LandingPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AboutScreen","id","className","ProjectsScreen","href","target","rel","src","JobJarScreenshot","alt","KDaceyScreenshot","MarsRoverScreenshot","FCCCertificate","onClick","history","push","ChinguCertificate","ContactScreen","LandingPage","useState","currentScreen","setCurrentScreen","scrollToPosition","createRef","style","height","ref","current","scrollTo","top","left","createBrowserHistory","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,iD,gBCA3CD,EAAOC,QAAU,IAA0B,gD,gBCA3CD,EAAOC,QAAU,IAA0B,6C,kKCE5B,SAASC,IACtB,OACE,yBAAKC,GAAG,gBACN,yBAAKC,UAAU,WACb,yBAAKA,UAAU,QACb,wBAAIA,UAAU,QAAd,gBACA,wBAAIA,UAAU,SAAd,wBACA,wBAAIA,UAAU,UACZ,uCACA,oCACA,mCACA,uCACA,uCACA,2C,oFCPG,SAASC,IACtB,OACE,yBAAKF,GAAG,mBACN,yBAAKC,UAAU,WACb,wCACA,yBAAKA,UAAU,YACb,yBAAKA,UAAU,2CACb,uBACEE,KAAK,gCACLC,OAAO,SACPC,IAAI,uBAEJ,uCACA,yBACEC,IAAKC,IACLC,IAAI,oCAGR,uKAMA,uBACEL,KAAK,uCACLC,OAAO,SACPC,IAAI,uBAHN,8BAQF,yBAAKJ,UAAU,uCACb,uBACEE,KAAK,6CACLC,OAAO,SACPC,IAAI,uBAEJ,gDACA,yBAAKC,IAAKG,IAAkBD,IAAI,MAElC,gIAIA,uBACEL,KAAK,6CACLC,OAAO,SACPC,IAAI,uBAHN,uCAQF,yBAAKJ,UAAU,6CACb,uBACEE,KAAK,iDACLC,OAAO,SACPC,IAAI,uBAEJ,0CACA,yBACEC,IAAKI,IACLF,IAAI,0CAIR,mMAKA,uBACEL,KAAK,yDACLC,OAAO,SACPC,IAAI,uBAHN,kCASJ,yBAAKJ,UAAU,sCACb,8CAEA,uBACEE,KAAK,oEACLC,OAAO,SACPC,IAAI,uBAEJ,uEACA,yBACEC,IAAKK,IACLH,IAAI,qCACJP,UAAU,iBAGd,wBAAIW,QAAS,kBAAMC,EAAQC,KAAK,iBAAhC,gDAGA,yBACER,IAAKS,IACLP,IAAI,+BACJP,UAAU,mBC3GP,SAASe,IACtB,OACE,yBAAKhB,GAAG,kBACN,yBAAKC,UAAU,WACb,yBAAKA,UAAU,QACb,8DACmC,IACjC,uBAAGE,KAAK,mCAAR,2BAC2B,MAG7B,qECRK,SAASc,IAAe,IAAD,EACMC,mBAAS,SADf,mBAC7BC,EAD6B,KACdC,EADc,KAE9BC,EAAmBC,sBAEzB,OACE,yBAAKrB,UAAU,eAAesB,MAAO,CAAEC,OAAQ,QAC7C,yBAAKvB,UAAU,cAAcwB,IAAKJ,IAClC,yBACET,QAAS,kBAAMQ,EAAiB,UAChCnB,UACoB,UAAlBkB,EACI,yCACA,kBAGa,UAAlBA,EACC,kBAACpB,EAAD,MAEA,wBAAIE,UAAU,cAAd,UAGJ,yBACEW,QAAS,WACPQ,EAAiB,YAGjBC,EAAiBK,QAAQC,SAAS,CAAEC,IAAK,EAAGC,KAAM,KAEpD5B,UACoB,aAAlBkB,EACI,4CACA,qBAGa,aAAlBA,EACC,kBAACjB,EAAD,MAEA,wBAAID,UAAU,cAAd,aAGJ,yBACEW,QAAS,kBAAMQ,EAAiB,YAChCnB,UACoB,YAAlBkB,EACI,2CACA,oBAGa,YAAlBA,EACC,kBAACH,EAAD,MAEA,wBAAIf,UAAU,cAAd,a,WCnDGY,G,MAAUiB,eAURC,MARf,WACE,OACE,yBAAK9B,UAAU,OACb,kBAACgB,EAAD,QCEce,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.48adcacb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/JobJarScreenshot.9685879d.png\";","module.exports = __webpack_public_path__ + \"static/media/KDaceyScreenshot.b9f1cc28.png\";","module.exports = __webpack_public_path__ + \"static/media/MarsRoverScreenshot.4272162a.png\";","module.exports = __webpack_public_path__ + \"static/media/Chingu_Certificate.16b55285.jpg\";","module.exports = __webpack_public_path__ + \"static/media/FCC_Certificate.01cb2c82.png\";","import React from 'react';\n\nexport default function AboutScreen() {\n  return (\n    <div id='about-screen'>\n      <div className='content'>\n        <div className='text'>\n          <h1 className='name'>Sue Anschutz</h1>\n          <h2 className='title'>JavaScript Developer</h2>\n          <ul className='skills'>\n            <li>ReactJS</li>\n            <li>HTML</li>\n            <li>CSS</li>\n            <li>Node.js</li>\n            <li>Express</li>\n            <li>MongoDB</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { history } from './../App';\nimport JobJarScreenshot from '../assets/JobJarScreenshot.png';\nimport KDaceyScreenshot from '../assets/KDaceyScreenshot.png';\nimport MarsRoverScreenshot from '../assets/MarsRoverScreenshot.png';\nimport ChinguCertificate from '../assets/Chingu_Certificate.jpg';\nimport FCCCertificate from '../assets/FCC_Certificate.png';\n\nexport default function ProjectsScreen() {\n  return (\n    <div id='projects-screen'>\n      <div className='content'>\n        <h1>Projects</h1>\n        <div className='projects'>\n          <div className='project-description job-jar-description'>\n            <a\n              href='https://job-jar.herokuapp.com'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              <h2>Job Jar</h2>\n              <img\n                src={JobJarScreenshot}\n                alt='screenshot of Job Jar homepage'\n              />\n            </a>\n            <p>\n              A full-stack application with React and CSS/SASS on the frontend,\n              and Node/Express, MongoDB/Mongoose on the backend, deployed on\n              Heroku.\n            </p>\n\n            <a\n              href='https://github.com/SAnschutz/job-jar'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              Job-Jar GitHub repository\n            </a>\n          </div>\n          <div className='project-description kathy-portfolio'>\n            <a\n              href='https://sanschutz.github.io/KDaceyWebsite/'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              <h2>KDacey Portfolio</h2>\n              <img src={KDaceyScreenshot} alt='' />\n            </a>\n            <p>\n              Website built for a local small business, utilizing React and\n              HTML/CSS, deployed on GitHub pages.\n            </p>\n            <a\n              href='https://github.com/SAnschutz/KDaceyWebsite'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              KDacey Portfolio GitHub repository\n            </a>\n          </div>\n          <div className='project-description rover-app-description'>\n            <a\n              href='https://sanschutz-mars-rover-app.herokuapp.com'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              <h2>Mars Rover</h2>\n              <img\n                src={MarsRoverScreenshot}\n                alt='screenshot of Mars Rover application'\n              />\n            </a>\n\n            <p>\n              A full-stack application created as part of my application to the\n              Chingu program, with React and SASS on the front end, and Node on\n              the backend, deployed on Heroku.\n            </p>\n            <a\n              href='https://github.com/SAnschutz/Chingu-tier-3-prework-app'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              Mars Rover GitHub repository\n            </a>\n          </div>\n        </div>\n        <div className='product-description certifications'>\n          <h2>Certifications</h2>\n\n          <a\n            href='https://www.freecodecamp.org/certification/fcc24b1501f/full-stack'\n            target='_blank'\n            rel='noopener noreferrer'\n          >\n            <h4>FreeCodeCamp Certificate of Completion </h4>\n            <img\n              src={FCCCertificate}\n              alt='FreeCodeCame certificate thumbnail'\n              className='certificate'\n            />\n          </a>\n          <h4 onClick={() => history.push('/chingucert')}>\n            Chingu (Voyage 10) Certificate of Completion\n          </h4>\n          <img\n            src={ChinguCertificate}\n            alt='Chingu certificate thumbnail'\n            className='certificate'\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function ContactScreen() {\n  return (\n    <div id='contact-screen'>\n      <div className='content'>\n        <div className='text'>\n          <p>\n            Contact me anytime via e-mail at{' '}\n            <a href='mailto:sueanschutzdev@gmail.com'>\n              sueanschutzdev@gmail.com{' '}\n            </a>\n          </p>\n          <p>I look forward to hearing from you!</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, createRef } from 'react';\nimport AboutScreen from './AboutScreen';\nimport ProjectsScreen from './ProjectsScreen';\nimport ContactScreen from './ContactScreen';\n\nexport default function LandingPage() {\n  const [currentScreen, setCurrentScreen] = useState('About');\n  const scrollToPosition = createRef();\n\n  return (\n    <div className='landing-page' style={{ height: '2px' }}>\n      <div className='scrollToDiv' ref={scrollToPosition}></div>\n      <div\n        onClick={() => setCurrentScreen('About')}\n        className={\n          currentScreen === 'About'\n            ? 'current-screen about-div content-slide'\n            : 'about-div link'\n        }\n      >\n        {currentScreen === 'About' ? (\n          <AboutScreen />\n        ) : (\n          <h3 className='link-label'>About</h3>\n        )}\n      </div>\n      <div\n        onClick={() => {\n          setCurrentScreen('Projects');\n          // scrollToPosition.current.scrollTop(0);\n\n          scrollToPosition.current.scrollTo({ top: 0, left: 0 });\n        }}\n        className={\n          currentScreen === 'Projects'\n            ? 'current-screen projects-div content-slide'\n            : 'projects-div link'\n        }\n      >\n        {currentScreen === 'Projects' ? (\n          <ProjectsScreen />\n        ) : (\n          <h3 className='link-label'>Projects</h3>\n        )}\n      </div>\n      <div\n        onClick={() => setCurrentScreen('Contact')}\n        className={\n          currentScreen === 'Contact'\n            ? 'current-screen contact-div content-slide'\n            : 'contact-div link'\n        }\n      >\n        {currentScreen === 'Contact' ? (\n          <ContactScreen />\n        ) : (\n          <h3 className='link-label'>Contact</h3>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport LandingPage from './components/LandingPage';\nimport { createBrowserHistory } from 'history';\n\nimport './styles/styles.scss';\nexport const history = createBrowserHistory();\n\nfunction App() {\n  return (\n    <div className='App'>\n      <LandingPage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}